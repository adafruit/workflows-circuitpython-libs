# SPDX-FileCopyrightText: 2017 Scott Shawcroft, written for Adafruit Industries
#
# SPDX-License-Identifier: MIT

name: 'Build CI'
description: 'Build CI used for pushes and pull requests'
runs:
  using: "composite"
  steps:
  - name: Translate Repo Name For Build Tools filename_prefix
    id: repo-name
    shell: bash
    run: |
      echo repo-name=$(
      echo ${{ github.repository }} |
      awk -F '\/' '{ print tolower($2) }' |
      tr '_' '-'
      ) >> $GITHUB_OUTPUT
  - name: Set up Python 3.x
    uses: actions/setup-python@v4
    with:
      python-version: "3.x"
  - name: Versions
    shell: bash
    run: |
      python3 --version
  - name: Checkout Current Repo
    uses: actions/checkout@v3
    with:
      submodules: true
  - name: Checkout tools repo
    uses: actions/checkout@v3
    with:
      repository: adafruit/actions-ci-circuitpython-libs
      path: actions-ci
  - name: Install dependencies
    # (e.g. - apt-get: gettext, etc; pip: circuitpython-build-tools, requirements.txt; etc.)
    shell: bash
    run: |
      source actions-ci/install.sh
  - name: Pip install Sphinx, pre-commit
    shell: bash
    run: |
      pip install --force-reinstall Sphinx sphinx-rtd-theme pre-commit
  - name: Library version
    shell: bash
    run: git describe --dirty --always --tags
  - name: Setup problem matchers
    uses: adafruit/circuitpython-action-library-ci-problem-matchers@v1
  - name: Pre-commit hooks
    shell: bash
    run: |
      pre-commit run --all-files
  - name: Build assets
    shell: bash
    run: circuitpython-build-bundles --filename_prefix ${{ steps.repo-name.outputs.repo-name }} --library_location .
  - name: Archive bundles
    uses: actions/upload-artifact@v3
    with:
      name: bundles
      path: ${{ github.workspace }}/bundles/
  - name: Check for docs folder
    id: need-docs
    shell: bash
    run: |
      echo docs=$( find . -wholename './docs' ) >> $GITHUB_OUTPUT
  - name: Build docs
    if: contains(steps.need-docs.outputs.docs, 'docs')
    working-directory: docs
    shell: bash
    run: sphinx-build -E -W -b html . _build/html
  - name: Check For pyproject.toml
    id: need-pypi
    shell: bash
    run: |
      echo pyproject-toml=$( find . -wholename './pyproject.toml' ) >> $GITHUB_OUTPUT
  - name: Build Python package
    if: contains(steps.need-pypi.outputs.pyproject-toml, 'pyproject.toml')
    shell: bash
    run: |
      pip install --upgrade build twine
      find -type f -not -path "./.*" -not -path "./docs*" \( -name "*.py" -o -name "*.toml" \) -exec sed -i -e "s/0.0.0+auto.0/1.2.3/" {} +
      python -m build
      twine check dist/*
